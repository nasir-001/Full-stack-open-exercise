{"version":3,"sources":["services/person.js","components/Person.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["baseUrl","axios","get","input","post","id","persons","delete","put","Person","person","name","number","onClick","window","confirm","deleteOne","then","response","Notification","message","className","Error","App","props","useState","search","setSearch","successMessage","setSuccessMessage","errorMessage","setErrorMessage","setPersons","setInput","useEffect","personDetails","data","addPerson","concat","setTimeout","handleSubmit","e","preventDefault","existingPerson","find","s","prev","filter","p","catch","error","handleChange","target","value","filteredPeople","toLowerCase","includes","style","display","type","placeholder","onChange","onSubmit","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.beadf96b.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst allPersons = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst createPerson = input => {\r\n    return axios.post(baseUrl, input)\r\n}\r\n\r\nconst deletePerson = (id, persons) => {\r\n    return axios.delete(`${baseUrl}/${id}`, persons)\r\n}\r\n\r\nconst editPerson = (id, persons) => {\r\n    return axios.put(`${baseUrl}/${id}`, persons)\r\n}\r\n\r\nexport default { allPersons, createPerson, deletePerson, editPerson }","import React from 'react';\r\nimport deleteOne from '../services/person';\r\n\r\nconst Person = ({id, person}) => {\r\n    const handledelete = () => {\r\n        if (window.confirm(`Delete ${person.name}?`) === true) {\r\n            deleteOne\r\n                .deletePerson(person.id)\r\n                .then(response => {\r\n                    // console.log(person);\r\n                })\r\n        } else {\r\n            return\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {person.name} {person.number} \r\n            <button onClick={handledelete}>delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n    if(message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"success\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react';\r\n\r\nconst Error = ({ message }) => {\r\n    if(message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error","import React, { useState, useEffect } from 'react';\r\nimport Person from './components/Person';\r\nimport Notification from './components/Notification';\r\nimport Error from './components/Error';\r\nimport personDetails from './services/person';\r\n\r\nconst App = (props) => {\r\n    const [search, setSearch] = useState('')\r\n    \r\n    const { name, number } = props;\r\n    const [ successMessage, setSuccessMessage ] = useState('')\r\n    const [ errorMessage, setErrorMessage ] = useState('')\r\n    const [persons, setPersons] = useState([]);\r\n    const [input, setInput] = useState({\r\n      name: \"\",\r\n      number: \"\"\r\n    });\r\n    // const count = persons.length\r\n\r\n    useEffect(() => {\r\n      personDetails\r\n        .allPersons()\r\n        .then(response => {\r\n          setPersons(response.data)\r\n        })\r\n    }, [])\r\n  \r\n    const addPerson = input => {      \r\n\r\n      setPersons([...persons, { name: input.name, number: input.number }]);\r\n      setInput({ name: \"\", number: \"\" });\r\n\r\n      personDetails\r\n        .createPerson(input)\r\n        .then(response => {\r\n          setPersons(persons.concat(response.data))\r\n          setSuccessMessage(`Added ${response.data.name}`);\r\n          setTimeout(() => {\r\n            setSuccessMessage(null)\r\n          }, 5000)\r\n        })\r\n\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n  \r\n      const existingPerson = persons.find((s) => s.name === input.name);\r\n      if (existingPerson) {\r\n        if (\r\n          window.confirm(\r\n            `${existingPerson.name} is already in the phonebook, replace the old number with a new one?`\r\n          ) === true\r\n        ) {\r\n          personDetails\r\n            .editPerson(existingPerson.id, input)\r\n            .then((response) => {\r\n            setPersons((prev) => [\r\n              ...prev.filter((p) => p.id !== response.id),\r\n              response\r\n            ]);\r\n            })\r\n            .catch(error => {\r\n              setErrorMessage(\r\n                `Information of this user has already remove from server`\r\n              )\r\n              setTimeout(() => {\r\n                setErrorMessage(null)\r\n              }, 5000)\r\n            })\r\n        }\r\n      } else {\r\n        addPerson(input);\r\n      }\r\n    };\r\n\r\n    const handleChange = e => {\r\n      setInput({\r\n        ...input,\r\n        [e.target.name]: e.target.value\r\n      });\r\n    };\r\n    const filteredPeople = persons.filter(person => {\r\n      return person.name.toLowerCase().includes(search.toLowerCase())\r\n    })\r\n    return (\r\n      <div>\r\n          <p>Note: everything works on refreshing the page!</p>\r\n        <h1>Phonebook</h1>\r\n        <Notification message={successMessage} />\r\n        <Error message={errorMessage} />\r\n        <div style={{ display: 'flex' }}>\r\n          <div>filter shown with</div>\r\n          <input type=\"text\" placeholder=\"Search...\" onChange={e => setSearch(e.target.value)} />\r\n          \r\n        </div>\r\n        <h1>add a new</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            name: \r\n            <input\r\n              name=\"name\"\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={handleChange}\r\n            /><br />\r\n            number: \r\n            <input\r\n              name=\"number\"\r\n              type=\"text\"\r\n              value={number}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">add</button>\r\n          </div>\r\n        </form>\r\n        <h1>Numbers</h1>\r\n        <li>\r\n          {filteredPeople.map(person => \r\n            <Person handleChange={handleChange} \r\n                    handleSubmit={handleSubmit} \r\n                    addPerson={addPerson} \r\n                    input={props} key={person.number} \r\n                    person={person}             \r\n            />\r\n            )}\r\n        </li><br />\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n  \nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}